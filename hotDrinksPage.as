package {	import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;	import flash.utils.getQualifiedClassName;	import flash.utils.getDefinitionByName;	public class hotDrinksPage extends MovieClip{		var img_head;		var page_title;		var fooditem;				//food items		var capp;		var latte;		var flatwhite;		var mocha;		var hotchoc;		var espresso;		var longblack;		var babycino;		var tea;		var machiato;				//them label		var capp_label:CheckBox = new CheckBox();		var latte_label:CheckBox = new CheckBox()		var flatwhite_label:CheckBox = new CheckBox();		var mocha_label:CheckBox = new CheckBox();		var hotchoc_label:CheckBox = new CheckBox();		var espresso_label:CheckBox = new CheckBox();		var longblack_label:CheckBox = new CheckBox();		var babycino_label:CheckBox = new CheckBox();		var tea_label:CheckBox = new CheckBox();		var machiato_label:CheckBox = new CheckBox();						//theminfo		var viewInfo1:TextField = new TextField();		var viewInfo2:TextField = new TextField();		var viewInfo3:TextField = new TextField();		var viewInfo4:TextField = new TextField();		var viewInfo5:TextField = new TextField();		var viewInfo6:TextField = new TextField();		var viewInfo7:TextField = new TextField();		var viewInfo8:TextField = new TextField();		var viewInfo9:TextField = new TextField();		var viewInfo10:TextField = new TextField();				var labels:Array =  [capp_label,latte_label,flatwhite_label, mocha_label, hotchoc_label, espresso_label, longblack_label, babycino_label, tea_label, machiato_label];		var txtlabels:Array = ["Cappuccino", "Latte", "Flat White", "Mocha", "Hot Chocolate", "Espresso", "Long Black", "Babycino", "Tea", "Macchiato"];		var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var linkFormat:TextFormat = new TextFormat();		var startX:int;		var startY:int;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 115;		var align_top = -20;				var backbutton;		public function hotDrinksPage()		{			this.width = 428;//480;			this.height = 252;//270;			myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			linkFormat.font = myFont.fontName;			linkFormat.size = 10;			linkFormat.color = 0x620c0d;			linkFormat.underline = true;									img_head = new hotdrinks();			img_head.y = -160;//-120;			img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);			page_title = new hot_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);			//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);			//add all hot drinks items to stage			capp = new hot1();			capp.x = align_left;			capp.y = align_top;			capp.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "capp.txt")});			this.addChild(capp);			latte = new hot2();			latte.x = align_left / 2;			latte.y = align_top;			latte.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "latte.txt")});			this.addChild(latte);			flatwhite = new hot3();			flatwhite.x = 0;			flatwhite.y = align_top;			flatwhite.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "flatwhite.txt")});			this.addChild(flatwhite);						mocha = new hot4();			mocha.x = align_right / 2;			mocha.y = align_top;			mocha.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "mocha.txt")});			this.addChild(mocha);				hotchoc = new hot5();			hotchoc.x = align_right;			hotchoc.y = align_top;			hotchoc.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "hotchoc.txt")});			this.addChild(hotchoc);						espresso = new hot6();			espresso.x = align_left;			espresso.y = align_top + diff;			espresso.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "espresso.txt")});			this.addChild(espresso);						longblack = new hot7();			longblack.x = align_left /2;			longblack.y = align_top + diff;			longblack.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "longblack.txt")});			this.addChild(longblack);			machiato = new hot8();			machiato.x = 0;			machiato.y = align_top + diff;			machiato.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "machiato.txt")});			this.addChild(machiato);						babycino = new hot9();			babycino.x = align_right / 2;			babycino.y = align_top + diff;			babycino.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "babycino.txt")});			this.addChild(babycino);			tea = new hot10();			tea.x = align_right;			tea.y = align_top + diff;			tea.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "tea.txt")});			this.addChild(tea);						/*labels*/					this.capp_label.label = txtlabels[0];			this.capp_label.width = 300;			this.capp_label.x = align_right - 40;			this.capp_label.y = capp.y + 40;			this.capp_label.setStyle("embedFonts", true);			this.capp_label.setStyle("textFormat", myTextFormat);			this.addChild(this.capp_label);						this.latte_label.label = txtlabels[1];			this.latte_label.width = 300;			this.latte_label.x = align_right/2 - 40;			this.latte_label.y = latte.y + 40;			this.latte_label.setStyle("embedFonts", true);			this.latte_label.setStyle("textFormat", myTextFormat);			this.addChild(this.latte_label);						this.flatwhite_label.label = txtlabels[2];			this.flatwhite_label.width = 300;			this.flatwhite_label.x = - 40;			this.flatwhite_label.y = flatwhite.y + 40;			this.flatwhite_label.setStyle("embedFonts", true);			this.flatwhite_label.setStyle("textFormat", myTextFormat);			this.addChild(this.flatwhite_label);						this.mocha_label = new CheckBox();			this.mocha_label.label = txtlabels[3];			this.mocha_label.width = 300;			this.mocha_label.x = align_left/2 - 40;			this.mocha_label.y = mocha.y + 40;			this.mocha_label.setStyle("embedFonts", true);			this.mocha_label.setStyle("textFormat", myTextFormat);			this.addChild(this.mocha_label);						this.hotchoc_label = new CheckBox();			this.hotchoc_label.label = txtlabels[4];			this.hotchoc_label.width = 300;			this.hotchoc_label.x = align_left - 40;			this.hotchoc_label.y = hotchoc.y + 40;			this.hotchoc_label.setStyle("embedFonts", true);			this.hotchoc_label.setStyle("textFormat", myTextFormat);			this.addChild(this.hotchoc_label);						this.espresso_label.label = txtlabels[5];			this.espresso_label.width = 300;			this.espresso_label.x = align_right - 40;			this.espresso_label.y = espresso.y + 40;			this.espresso_label.setStyle("embedFonts", true);			this.espresso_label.setStyle("textFormat", myTextFormat);			this.addChild(this.espresso_label);						this.longblack_label.label = txtlabels[6];			this.longblack_label.width = 300;			this.longblack_label.x = align_right/2 - 40;			this.longblack_label.y = longblack.y + 40;			this.longblack_label.setStyle("embedFonts", true);			this.longblack_label.setStyle("textFormat", myTextFormat);			this.addChild(this.longblack_label);						this.babycino_label.label = txtlabels[7];			this.babycino_label.width = 300;			this.babycino_label.x = - 40;			this.babycino_label.y = babycino.y + 40;			this.babycino_label.setStyle("embedFonts", true);			this.babycino_label.setStyle("textFormat", myTextFormat);			this.addChild(this.babycino_label);						this.tea_label = new CheckBox();			this.tea_label.label = txtlabels[8];			this.tea_label.width = 300;			this.tea_label.x = align_left/2 - 40;			this.tea_label.y = tea.y + 40;			this.tea_label.setStyle("embedFonts", true);			this.tea_label.setStyle("textFormat", myTextFormat);			this.addChild(this.tea_label);									this.machiato_label = new CheckBox();			this.machiato_label.label = txtlabels[9];			this.machiato_label.width = 300;			this.machiato_label.x = align_left - 40;			this.machiato_label.y = machiato.y + 40;			this.machiato_label.setStyle("embedFonts", true);			this.machiato_label.setStyle("textFormat", myTextFormat);			this.addChild(this.machiato_label);			/*LABEL CREATION END*/						/*View info lists Created*/						viewInfo1.defaultTextFormat = linkFormat;			viewInfo1.embedFonts = true;			viewInfo1.width = 300;			viewInfo1.x = capp.x - 20;			viewInfo1.y = capp.y + 55;			viewInfo1.wordWrap = true;			viewInfo1.text = "View Info" ;			viewInfo1.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "capp.txt")});			this.addChild(viewInfo1);						viewInfo2.defaultTextFormat = linkFormat;			viewInfo2.embedFonts = true;			viewInfo2.width = 300;			viewInfo2.x = latte.x - 20;			viewInfo2.y = latte.y + 55;			viewInfo2.wordWrap = true;			viewInfo2.text = "View Info" ;			viewInfo2.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "latte.txt")});			this.addChild(viewInfo2);							viewInfo3.defaultTextFormat = linkFormat;			viewInfo3.embedFonts = true;			viewInfo3.width = 300;			viewInfo3.x = flatwhite.x - 20;			viewInfo3.y = flatwhite.y + 55;			viewInfo3.wordWrap = true;			viewInfo3.text = "View Info" ;			viewInfo3.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "flatwhite.txt")});			this.addChild(viewInfo3);						viewInfo4.defaultTextFormat = linkFormat;			viewInfo4.embedFonts = true;			viewInfo4.width = 300;			viewInfo4.x = mocha.x - 20;			viewInfo4.y = mocha.y + 55;			viewInfo4.wordWrap = true;			viewInfo4.text = "View Info" ;			viewInfo4.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "mocha.txt")});			this.addChild(viewInfo4);						viewInfo5.defaultTextFormat = linkFormat;			viewInfo5.embedFonts = true;			viewInfo5.width = 300;			viewInfo5.x = hotchoc.x - 20;			viewInfo5.y = hotchoc.y + 55;			viewInfo5.wordWrap = true;			viewInfo5.text = "View Info" ;			viewInfo5.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "hotchoc.txt")});			this.addChild(viewInfo5);												viewInfo6.defaultTextFormat = linkFormat;			viewInfo6.embedFonts = true;			viewInfo6.width = 300;			viewInfo6.x = espresso.x - 20;			viewInfo6.y = espresso.y + 55;			viewInfo6.wordWrap = true;			viewInfo6.text = "View Info" ;			viewInfo6.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "espresso.txt")});			this.addChild(viewInfo6);						viewInfo7.defaultTextFormat = linkFormat;			viewInfo7.embedFonts = true;			viewInfo7.width = 300;			viewInfo7.x = longblack.x - 20;			viewInfo7.y = longblack.y + 55;			viewInfo7.wordWrap = true;			viewInfo7.text = "View Info" ;			viewInfo7.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "longblack.txt")});			this.addChild(viewInfo7);							viewInfo8.defaultTextFormat = linkFormat;			viewInfo8.embedFonts = true;			viewInfo8.width = 300;			viewInfo8.x = babycino.x - 20;			viewInfo8.y = babycino.y + 55;			viewInfo8.wordWrap = true;			viewInfo8.text = "View Info" ;			viewInfo8.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "babycino.txt")});			this.addChild(viewInfo8);						viewInfo9.defaultTextFormat = linkFormat;			viewInfo9.embedFonts = true;			viewInfo9.width = 300;			viewInfo9.x = tea.x - 20;			viewInfo9.y = tea.y + 55;			viewInfo9.wordWrap = true;			viewInfo9.text = "View Info" ;			viewInfo9.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "tea.txt")});			this.addChild(viewInfo9);						viewInfo10.defaultTextFormat = linkFormat;			viewInfo10.embedFonts = true;			viewInfo10.width = 300;			viewInfo10.x = machiato.x - 20;			viewInfo10.y = machiato.y + 55;			viewInfo10.wordWrap = true;			viewInfo10.text = "View Info" ;			viewInfo10.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "macchiato.txt")});			this.addChild(viewInfo10);						/*end*/						circles = [capp,latte,flatwhite,mocha, hotchoc, espresso, longblack,machiato,babycino,tea];						for each (var i in circles)			{				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}			backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);		}		function startDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.startDrag();			// no longer need to keep track of startX & startY here because that's already been done up above			event.target.startDrag(true);			event.target.parent.addChild(event.target);		}		function stopDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.stopDrag();			event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject;			if (event.target.hitTestObject(img_head))			{				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each (var circleMC:MovieClip in circles)				{					if (event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}			else			{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"hotdrinks");			fooditem.getClose().addEventListener(MouseEvent.MOUSE_DOWN, closeInfo);			this.addChild(fooditem);		}		function closeInfo(e:MouseEvent):void{			this.removeChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}}