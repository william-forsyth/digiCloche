package {	import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class hotDrinksPage extends MovieClip{		var img_head;		var page_title;		var fooditem;				//food items		var capp;		var latte;		var flatwhite;		var mocha;		var hotchoc;		var espresso;		var longblack;		var babycino;		var tea;		var machiato;				//them label		var capp_label;		var latte_label		var flatwhite_label;		var mocha_label;		var hotchoc_label;		var espresso_label;		var longblack_label;		var babycino_label;		var tea_label;		var machiato_label;		var labels:Array =  [capp_label,latte_label,flatwhite_label, mocha_label, hotchoc_label, espresso_label, longblack_label, babycino_label, tea_label, machiato_label];		var txtlabels:Array = ["Cappuccino", "Latte", "Flat White", "Mocha", "Hot Chocolate", "Espresso", "Long Black", "Babycino", "Tea", "Macchiato"];		var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();				var startX:int;		var startY:int;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				var backbutton;		public function hotDrinksPage()		{			this.width = 428;//480;			this.height = 252;//270;			myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			img_head = new hotdrinks();			img_head.y = -160;//-120;			img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);			page_title = new hot_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);			//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);			//add all hot drinks items to stage			capp = new hot1();			capp.x = align_left;			capp.y = align_top;			capp.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "capp.txt")});			this.addChild(capp);			latte = new hot2();			latte.x = align_left / 2;			latte.y = align_top;			latte.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "latte.txt")});			this.addChild(latte);			flatwhite = new hot3();			flatwhite.x = 0;			flatwhite.y = align_top;			flatwhite.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "flatwhite.txt")});			this.addChild(flatwhite);						mocha = new hot4();			mocha.x = align_right / 2;			mocha.y = align_top;			mocha.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "mocha.txt")});			this.addChild(mocha);				hotchoc = new hot5();			hotchoc.x = align_right;			hotchoc.y = align_top;			hotchoc.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "hotchoc.txt")});			this.addChild(hotchoc);						espresso = new hot6();			espresso.x = align_left;			espresso.y = align_top + diff;			espresso.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "espresso.txt")});			this.addChild(espresso);						longblack = new hot7();			longblack.x = align_left /2;			longblack.y = align_top + diff;			longblack.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "longblack.txt")});			this.addChild(longblack);			machiato = new hot8();			machiato.x = 0;			machiato.y = align_top + diff;			machiato.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "machiato.txt")});			this.addChild(machiato);						babycino = new hot9();			babycino.x = align_right / 2;			babycino.y = align_top + diff;			babycino.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "babycino.txt")});			this.addChild(babycino);			tea = new hot10();			tea.x = align_right;			tea.y = align_top + diff;			tea.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "tea.txt")});			this.addChild(tea);			circles = [capp,latte,flatwhite,mocha, hotchoc, espresso, longblack,machiato,babycino,tea];						for each (var k in labels){					trace(labels.indexOf(k));					k = new CheckBox();					k.label = "hey";//txtlabels[labels.indexOf(k)];					k.width = 300;					//k.x = circles[labels.indexOf(k)].x;//align_left/2 - 40;					//k.y = circles[labels.indexOf(k)].y + 40;//cinntart.y + 40;					k.setStyle("embedFonts", true);					k.setStyle("textFormat", myTextFormat);					this.addChild(k);			}						for each (var i in circles)			{				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}			backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);		}		function startDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.startDrag();			// no longer need to keep track of startX & startY here because that's already been done up above			event.target.startDrag(true);			event.target.parent.addChild(event.target);		}		function stopDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.stopDrag();			event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject;			if (event.target.hitTestObject(img_head))			{				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each (var circleMC:MovieClip in circles)				{					if (event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}			else			{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"hotdrinks");			this.addChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}}