/* 19/05/2014 by Aphrodite */package  {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import fl.controls.*;	import fl.transitions.*; 	import fl.transitions.easing.*;	import pq.multitouch.*;	import flash.text.engine.*;     import flash.display.Sprite; 	import flash.text.*;	import flash.events.*;	import flash.net.*;	//simport flash.ui*;		//import flash.text.*;	//import fl.controls.Button;    //import fl.controls.Label;    //needed to automatically size the labels    //import flash.text.TextFieldAutoSize;//    import flash.events.Event;		public class menu extends MovieClip {		var menuscreen;		var homescreen;		var foodscreen;		var drinksscreen;		var wbg;		var myLabel;		var welcome;		var language;		var lang_select;		var next_page:Button;		var backB;		var changeView;				var food_button;		/*fewwwd*/		var align_top = -110;		var myquiche;		var mycarbonara;		var mynachos;		var mypumpkin;		var mylasagna;				var entree;		var mains;		var sides;		var soup;		var desserts;				/*drinks*/		var myhot;		var mycold;		var myalc;				var drinks_button;		var text;				/*List View elements*/		var align_left = -210;		var align_right = 200;		var btn_width = 70;		var align_menu = -25;		var myentree_list;		var mymains_list;		var mysides_list;		var mysoup_list;		var mydesserts_list;						var myFont:Font = new helvs_light();		/*Embed fonts*/		var myTextFormat:TextFormat = new TextFormat();		var myTextLoader;						public function menu(xPos, yPos) {			// constructor code			trace('new menu created');						this.x = xPos;			this.y = yPos;						this.width = 480;			this.height = 300;						/**ELEMENTS:**/						menuscreen = new bg_brown();			this.addChild(menuscreen);						welcome = new welcome_msg();			this.addChild(welcome);			welcome.y = -50;						language = new language_msg();			this.addChild(language);						myTextFormat.font = myFont.fontName;						lang_select = new ComboBox();			lang_select.addItem({label:"English"});			lang_select.addItem({label:"Japanese"});			lang_select.x = -60;			lang_select.y = 30;			lang_select.setStyle("embedFonts", true);			lang_select.setStyle("textFormat", myTextFormat);			this.addChild(lang_select);								next_page = new Button();			next_page.width = 40;			next_page.y = 70;			next_page.x = -30;			next_page.label = "Start";			trace(next_page.label);			next_page.setStyle("embedFonts", true);			next_page.setStyle("textFormat", myTextFormat);			next_page.graphics.beginFill(0xFFFFFF);			next_page.graphics.endFill();			this.addChild(next_page);			next_page.addEventListener(MouseEvent.CLICK, homeScreen);						//this.addChild(TouchViewer.getInstance());				//MultiTouch.enableMouseSimulation(this);					}				private function homeScreen(e:MouseEvent):void{			for (var i=0; i < this.numChildren; i++){				removeChildAt(i);				//this.removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			}			homescreen = new bg_red();			this.addChild(homescreen);						food_button = new foodButton2();			food_button.x = 100;			food_button.addEventListener(MouseEvent.CLICK, showFood);						drinks_button = new drinksButton2();			drinks_button.x = -100;			drinks_button.addEventListener(MouseEvent.CLICK, showDrinks);						this.addChild(food_button);			this.addChild(drinks_button);								}									function showName(e:Event):void {    		var myArrayOfLines = new Array();			myArrayOfLines = myTextLoader.data.split(/\n/);			trace(myArrayOfLines[0]);			var foodname = new Button();			foodname.width = btn_width;			foodname.label = myArrayOfLines[0];			foodname.setStyle("embedFonts", true);			foodname.setStyle("textFormat", myTextFormat);			this.addChild(foodname);		}		private function showFood(e:MouseEvent){						for (var i=0; i < this.numChildren; i++){				removeChildAt(i);				//this.removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			}			foodscreen = new bg_food();			this.addChild(foodscreen);						myquiche = new quiche();			this.addChild(myquiche);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			myquiche.x = -60;			myquiche.y = align_top;			myquiche.width = 30;			myquiche.height = 30;			//myquiche.addEventListener(MouseEvent.MOUSE_OVER, hoverEffect(myquiche));			myquiche.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, myquiche)});			//myquiche.addEventListener(MouseEvent.MOUSE_OUT, function(outEffect:MouseEvent):void{ shrink(outEffect, myquiche)});			//this.addEventListener(MouseEvent.MOUSE_DOWN, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mylasagna)});						var txt:TextField = new TextField();			txt.text = "Chef's Recommendation";						txt.x = -60;			txt.textColor = 0xFFFFFF;			txt.y = align_top + 20;			this.addChild(txt);					mycarbonara = new carbonara2();			this.addChild(mycarbonara);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			mycarbonara.x = -30;			mycarbonara.y = align_top;			mycarbonara.width = 30;			mycarbonara.height = 30;			mycarbonara.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mycarbonara)});			//mycarbonara.label("Chef's Recommendation");			mypumpkin = new pumpkin();			this.addChild(mypumpkin);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			//mypumpkin.x = 24;			mypumpkin.y = align_top;			mypumpkin.width = 30;			mypumpkin.height = 30;			mypumpkin.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mypumpkin)});						mynachos = new nachos();			this.addChild(mynachos);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			mynachos.x = 30;			mynachos.y = align_top;			mynachos.width = 30;			mynachos.height = 30;			mynachos.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mynachos)});									mylasagna = new lasagna();			this.addChild(mylasagna);			//MultiTouch.enableGesture(mylasagna,new MultiDragScaleRotate());			mylasagna.x = 60;			mylasagna.y = align_top;			mylasagna.width = 30;			mylasagna.height = 30;			mylasagna.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mylasagna)});					addGridButtons();					}				private function showDrinks(e:MouseEvent){						for (var i=0; i < this.numChildren; i++){				removeChildAt(i);				//this.removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			}						drinksscreen = new bg_drinks();			this.addChild(drinksscreen);						myhot = new carbonara2();			this.addChild(myhot);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			myhot.x = -90;			myhot.y = -10;			myhot.width = 80;			myhot.height = 80;						mycold = new carbonara2();			this.addChild(mycold);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			mycold.x = 0;			mycold.y = -10;			mycold.width = 80;			mycold.height = 80;									myalc = new carbonara2();			this.addChild(myalc);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			myalc.x = 90;			myalc.y = -10;			myalc.width = 80;			myalc.height = 80;					}						function enlarge(event:MouseEvent, something):void{				//something.scaleX = 1.02;				//something.scaleY = 1.02;				TransitionManager.start(something, {type:Zoom, direction:Transition.IN, duration:2, easing:Elastic.easeOut});		}				function changeViewList(e:MouseEvent){			for (var i=0; i < this.numChildren; i++){					if (getChildAt(i) == changeView ||						getChildAt(i) == entree ||						getChildAt(i) == mains ||						getChildAt(i) == sides ||						getChildAt(i) == soup ||						getChildAt(i) == desserts){												removeChildAt(i);						i--;											}					//this.removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			}			addListButtons();							}		function changeViewGrid(e:MouseEvent){			for (var i=0; i < this.numChildren; i++){					if (getChildAt(i) == changeView ||						getChildAt(i) == myentree_list ||						getChildAt(i) == mymains_list ||						getChildAt(i) == mysides_list ||						getChildAt(i) == mysoup_list ||						getChildAt(i) == mydesserts_list){												removeChildAt(i);						i--;					}					//this.removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);			}						addGridButtons();		}				function showList(e:MouseEvent, folder){			if (!wbg){				wbg = new bg_white();				wbg.width = 400;				wbg.height = 100;				wbg.y = 55;				this.addChild(wbg);								myTextLoader = new URLLoader();				myTextLoader.addEventListener(Event.COMPLETE, showName);				myTextLoader.load(new URLRequest("food/" + folder + "/list.txt"));							}		}		function showList2(e:MouseEvent){			if (!wbg){				trace("fddd");				wbg = new bg_white();				wbg.width = 320;				wbg.height = 160;				wbg.y = 30;				wbg.x = 40;				this.addChild(wbg);			}					}				function addGridButtons(){									changeView = new grid_activated();			changeView.x = align_right;			changeView.y = -65;			changeView.width = 49.5/1.5;			changeView.height = 21.5/1.5;			this.addChild(changeView);			changeView.addEventListener(MouseEvent.CLICK, changeViewList);		/*MENU*/						entree = new carbonara2();						//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			entree.x = -150;			entree.y = align_menu;			entree.width = 60;			entree.height = 59;			//myquiche.addEventListener(MouseEvent.MOUSE_OVER, hoverEffect(myquiche));			//myquiche.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, myquiche)});			//myquiche.addEventListener(MouseEvent.MOUSE_OUT, function(outEffect:MouseEvent):void{ shrink(outEffect, myquiche)});			this.addEventListener(MouseEvent.MOUSE_DOWN, startDragging, true);						this.addEventListener(MouseEvent.MOUSE_UP, stopDragging, true);			this.addChild(entree);			mains = new carbonara2();			this.addChild(mains);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			mains.x = -75;			mains.y = align_menu;			mains.width = 60;			mains.height = 59;			//mycarbonara.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mycarbonara)});						sides = new carbonara2();			this.addChild(sides);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			//mypumpkin.x = 24;			sides.y = align_menu;			sides.width = 60;			sides.height = 59;			//mypumpkin.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mypumpkin)});						soup = new carbonara2();			this.addChild(soup);			//MultiTouch.enableGesture(this,new MultiDragScaleRotate());			soup.x = 75;			soup.y = align_menu;			soup.width = 60;			soup.height = 59;			//mynachos.addEventListener(MouseEvent.MOUSE_OVER, function(hoverEffect:MouseEvent):void{ enlarge(hoverEffect, mynachos)});						desserts = new carbonara2();			this.addChild(desserts);			//MultiTouch.enableGesture(mylasagna,new MultiDragScaleRotate());			desserts.x = 150;			desserts.y = align_menu;			desserts.width = 60;			desserts.height = 59;			//desserts.addEventListener(MouseEvent.MOUSE_DOWN, showList);			desserts.addEventListener(MouseEvent.CLICK, function(e:MouseEvent):void{ showList(e, "desserts")});  			addBackButton(homeScreen);						changeView = new grid_activated();			changeView.x = align_right;			changeView.y = -65;			changeView.width = 49.5/1.5;			changeView.height = 21.5/1.5;			this.addChild(changeView);			changeView.addEventListener(MouseEvent.CLICK, changeViewList);		}		function addListButtons(){					myTextFormat.font = myFont.fontName;			//myTextFormat.backgroundColor = 0xFFFFFF;						changeView = new list_activated();			changeView.x = align_right;			changeView.y = -65;			changeView.width = 49.5/1.5;			changeView.height = 21.5/1.5;			this.addChild(changeView);			changeView.addEventListener(MouseEvent.CLICK, changeViewGrid);						myentree_list = new Button();			myentree_list.width = btn_width;			myentree_list.y = -50;			myentree_list.x = align_left;			myentree_list.label = "Entreès";			myentree_list.setStyle("embedFonts", true);			myentree_list.setStyle("textFormat", myTextFormat);			this.addChild(myentree_list);			myentree_list.addEventListener(MouseEvent.CLICK, showList2);									mymains_list = new Button();			mymains_list.width = btn_width;			mymains_list.y = -25;			mymains_list.x = align_left;			mymains_list.label = "Mains";			mymains_list.setStyle("embedFonts", true);			mymains_list.setStyle("textFormat", myTextFormat);			this.addChild(mymains_list);			//myentree_list.addEventListener(MouseEvent.CLICK, homeScreen);						mysides_list = new Button();			mysides_list.width = btn_width;			mysides_list.y = 0;			mysides_list.x = align_left;			mysides_list.label = "Sides";			mysides_list.setStyle("embedFonts", true);			mysides_list.setStyle("textFormat", myTextFormat);			this.addChild(mysides_list);			//myentree_list.addEventListener(MouseEvent.CLICK, homeScreen);						mysoup_list = new Button();			mysoup_list.width = btn_width;			mysoup_list.y = 25;			mysoup_list.x = align_left;			mysoup_list.label = "Soup";			mysoup_list.setStyle("embedFonts", true);			mysoup_list.setStyle("textFormat", myTextFormat);			this.addChild(mysoup_list);			//myentree_list.addEventListener(MouseEvent.CLICK, homeScreen);						mydesserts_list = new Button();			mydesserts_list.width = btn_width;			mydesserts_list.y = 50;			mydesserts_list.x = align_left;			mydesserts_list.label = "Desserts";			mydesserts_list.setStyle("embedFonts", true);			mydesserts_list.setStyle("textFormat", myTextFormat);			this.addChild(mydesserts_list);			//myentree_list.addEventListener(MouseEvent.CLICK, homeScreen);				}		function addBackButton(page){			backB = new back();			backB.x = align_left;			backB.y = align_top;			backB.width = 30;			backB.height = 20;			backB.addEventListener(MouseEvent.MIDDLE_MOUSE_DOWN, page);			this.addChild(backB);					}		function startDragging(e:MouseEvent) {			entree.startDrag();		}		 		function stopDragging(e:MouseEvent) {			entree.stopDrag();		}	}	}