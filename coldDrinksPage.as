package {	import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class coldDrinksPage extends MovieClip	{		var img_head;		var page_title;		var fooditem;		var oj;		var aj;		var special;		var ginger;		var lemlime;		var milk;		var smoothies;		var softdrinks;				var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var startX:int;		var startY:int;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				var backbutton;		public function coldDrinksPage()		{			this.width = 428;//480;			this.height = 252;//270;			myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			img_head = new colddrinks();			img_head.y = -160;//-120;			img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);			page_title = new cold_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);			//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);			oj = new cold1();			oj.x = align_left;			oj.y = align_top;			oj.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "oj.txt")});			this.addChild(oj);			aj = new cold2();			aj.x = align_left / 2;			aj.y = align_top;			aj.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "aj.txt")});			this.addChild(aj);			lemlime = new cold3();			lemlime.x = 0;			lemlime.y = align_top;			lemlime.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "lemonlime.txt")});			this.addChild(lemlime);			ginger = new cold4();			ginger.x = align_right / 2;			ginger.y = align_top;			ginger.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "ginger.txt")});			this.addChild(ginger);						special = new cold5();			special.x = align_right;			special.y = align_top;			special.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "special.txt")});			this.addChild(special);			softdrinks = new cold6();			softdrinks.x = align_left;			softdrinks.y = align_top + diff;			softdrinks.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "softdrink.txt")});			this.addChild(softdrinks);						milk = new cold7();			milk.x = align_left / 2;			milk.y = align_top+diff;			milk.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "milkshake.txt")});			this.addChild(milk);			smoothies = new cold8();			smoothies.x = 0;			smoothies.y = align_top + diff;			smoothies.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "smoothies.txt")});			this.addChild(smoothies);					circles = [oj,aj,special,ginger,lemlime,milk,smoothies];			for each (var i in circles)			{				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}			backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);		}		function startDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.startDrag();			// no longer need to keep track of startX & startY here because that's already been done up above			event.target.startDrag(true);			event.target.parent.addChild(event.target);		}		function stopDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.stopDrag();			event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject;			if (event.target.hitTestObject(img_head))			{				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each (var circleMC:MovieClip in circles)				{					if (event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}			else			{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"colddrinks");			this.addChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}}