package {	import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class coldDrinksPage extends MovieClip	{		var img_head;		var page_title;		var fooditem;		var oj;		var aj;		var special;		var ginger;		var lemlime;		var milk;		var smoothies;		var softdrinks;				var oj_label;		var aj_label;		var special_label;		var ginger_label;		var lemlime_label;		var milk_label;		var smoothies_label;		var softdrinks_label;						//theminfo		var viewInfo1:TextField = new TextField();		var viewInfo2:TextField = new TextField();		var viewInfo3:TextField = new TextField();		var viewInfo4:TextField = new TextField();		var viewInfo5:TextField = new TextField();		var viewInfo6:TextField = new TextField();		var viewInfo7:TextField = new TextField();		var viewInfo8:TextField = new TextField();				var cdrinks:Array = [oj_label,aj_label,special_label,ginger_label,lemlime_label,milk_label,smoothies_label,softdrinks_label];		var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var linkFormat:TextFormat = new TextFormat();		var startX:int;		var startY:int;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				var backbutton;		var arimg;		public function coldDrinksPage()		{			this.width = 428;//480;			this.height = 252;//270;			myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			linkFormat.font = myFont.fontName;			linkFormat.size = 10;			linkFormat.color = 0x620c0d;						linkFormat.underline = true;			img_head = new colddrinks();			img_head.y = -160;//-120;			img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);			page_title = new cold_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);			//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);			oj = new cold1();			oj.x = align_left;			oj.y = align_top;			this.addChild(oj);			aj = new cold2();			aj.x = align_left / 2;			aj.y = align_top;			this.addChild(aj);			lemlime = new cold3();			lemlime.x = 0;			lemlime.y = align_top;			this.addChild(lemlime);			ginger = new cold4();			ginger.x = align_right / 2;			ginger.y = align_top;			this.addChild(ginger);						special = new cold5();			special.x = align_right;			special.y = align_top;			this.addChild(special);			softdrinks = new cold6();			softdrinks.x = align_left;			softdrinks.y = align_top + diff;			this.addChild(softdrinks);						milk = new cold7();			milk.x = align_left / 2;			milk.y = align_top+diff;			this.addChild(milk);			smoothies = new cold8();			smoothies.x = 0;			smoothies.y = align_top + diff;			this.addChild(smoothies);									/****LABELS******/			oj_label = new CheckBox();			oj_label.label = "Orange Juice";			oj_label.width = 300;			oj_label.x = align_left - 40;			oj_label.y = oj.y + 40;			oj_label.setStyle("embedFonts", true);			oj_label.setStyle("textFormat", myTextFormat);			this.addChild(oj_label);			aj_label = new CheckBox();			aj_label.label = "Apple Juice";			aj_label.width = 300;			aj_label.x = align_left/2 - 40;			aj_label.y = aj.y + 40;			aj_label.setStyle("embedFonts", true);			aj_label.setStyle("textFormat", myTextFormat);			this.addChild(aj_label);			lemlime_label = new CheckBox();			lemlime_label.label = "Lemon Lime Bitters";			lemlime_label.width = 300;			lemlime_label.x = - 40;			lemlime_label.y = lemlime.y + 40;			lemlime_label.setStyle("embedFonts", true);			lemlime_label.setStyle("textFormat", myTextFormat);			this.addChild(lemlime_label);			ginger_label = new CheckBox();			ginger_label.label = "Ginger Beer";			ginger_label.width = 300;			ginger_label.x = align_right/2 - 40;			ginger_label.y = ginger.y + 40;			ginger_label.setStyle("embedFonts", true);			ginger_label.setStyle("textFormat", myTextFormat);			this.addChild(ginger_label);						special_label = new CheckBox();			special_label.label = "DigiDining Special Punch";			special_label.width = 300;			special_label.x = align_right - 40;			special_label.y = special.y + 40;			special_label.setStyle("embedFonts", true);			special_label.setStyle("textFormat", myTextFormat);			this.addChild(special_label);						softdrinks_label = new CheckBox();			softdrinks_label.label = "Softdrinks";			softdrinks_label.width = 300;			softdrinks_label.x = align_left - 40;			softdrinks_label.y = softdrinks.y + 40;			softdrinks_label.setStyle("embedFonts", true);			softdrinks_label.setStyle("textFormat", myTextFormat);			this.addChild(softdrinks_label);						milk_label = new CheckBox();			milk_label.label = "Milkshakes";			milk_label.width = 300;			milk_label.x = align_left/2 - 40;			milk_label.y = milk.y + 40;			milk_label.setStyle("embedFonts", true);			milk_label.setStyle("textFormat", myTextFormat);			this.addChild(milk_label);			smoothies_label = new CheckBox();			smoothies_label.label = "Smoothies";			smoothies_label.width = 300;			smoothies_label.x = - 40;			smoothies_label.y = smoothies.y + 40;			smoothies_label.setStyle("embedFonts", true);			smoothies_label.setStyle("textFormat", myTextFormat);			this.addChild(smoothies_label);						/*View info lists Created*/						viewInfo1.defaultTextFormat = linkFormat;			viewInfo1.embedFonts = true;			viewInfo1.width = 300;			viewInfo1.x = oj.x - 20;			viewInfo1.y = oj.y + 55;			viewInfo1.wordWrap = true;			viewInfo1.text = "View Info" ;			viewInfo1.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "oj.txt")});			this.addChild(viewInfo1);						viewInfo2.defaultTextFormat = linkFormat;			viewInfo2.embedFonts = true;			viewInfo2.width = 300;			viewInfo2.x = special.x - 20;			viewInfo2.y = special.y + 55;			viewInfo2.wordWrap = true;			viewInfo2.text = "View Info" ;			viewInfo2.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "special.txt")});			this.addChild(viewInfo2);							viewInfo3.defaultTextFormat = linkFormat;			viewInfo3.embedFonts = true;			viewInfo3.width = 300;			viewInfo3.x = ginger.x - 20;			viewInfo3.y = ginger.y + 55;			viewInfo3.wordWrap = true;			viewInfo3.text = "View Info" ;			viewInfo3.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "ginger.txt")});			this.addChild(viewInfo3);						viewInfo4.defaultTextFormat = linkFormat;			viewInfo4.embedFonts = true;			viewInfo4.width = 300;			viewInfo4.x = lemlime.x - 20;			viewInfo4.y = lemlime.y + 55;			viewInfo4.wordWrap = true;			viewInfo4.text = "View Info" ;			viewInfo4.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "lemonlime.txt")});			this.addChild(viewInfo4);						viewInfo5.defaultTextFormat = linkFormat;			viewInfo5.embedFonts = true;			viewInfo5.width = 300;			viewInfo5.x = smoothies.x - 20;			viewInfo5.y = smoothies.y + 55;			viewInfo5.wordWrap = true;			viewInfo5.text = "View Info" ;			viewInfo5.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "smoothies.txt")});			this.addChild(viewInfo5);												viewInfo6.defaultTextFormat = linkFormat;			viewInfo6.embedFonts = true;			viewInfo6.width = 300;			viewInfo6.x = milk.x - 20;			viewInfo6.y = milk.y + 55;			viewInfo6.wordWrap = true;			viewInfo6.text = "View Info" ;			viewInfo6.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "milkshake.txt")});			this.addChild(viewInfo6);						viewInfo7.defaultTextFormat = linkFormat;			viewInfo7.embedFonts = true;			viewInfo7.width = 300;			viewInfo7.x = softdrinks.x - 20;			viewInfo7.y = softdrinks.y + 55;			viewInfo7.wordWrap = true;			viewInfo7.text = "View Info" ;			viewInfo7.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "softdrink.txt")});			this.addChild(viewInfo7);							viewInfo8.defaultTextFormat = linkFormat;			viewInfo8.embedFonts = true;			viewInfo8.width = 300;			viewInfo8.x = aj.x - 20;			viewInfo8.y = aj.y + 55;			viewInfo8.wordWrap = true;			viewInfo8.text = "View Info" ;			viewInfo8.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "aj.txt")});			this.addChild(viewInfo8);									circles = [oj,aj,special,ginger,lemlime,milk,smoothies, softdrinks];			for each (var i in circles)			{				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}										backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);						arimg = new patt5();			arimg.y = 130;			arimg.x = 150;			this.addChild(arimg);		}		function startDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.startDrag();			// no longer need to keep track of startX & startY here because that's already been done up above			event.target.startDrag(true);			event.target.parent.addChild(event.target);		}		function stopDragging(event:MouseEvent):void		{//, obj:Object) {			//obj.stopDrag();			event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject;			if (event.target.hitTestObject(img_head))			{				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each (var circleMC:MovieClip in circles)				{					if (event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}			else			{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"colddrinks");			fooditem.getClose().addEventListener(MouseEvent.MOUSE_DOWN, closeInfo);			this.addChild(fooditem);		}		function closeInfo(e:MouseEvent):void{			this.removeChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}}