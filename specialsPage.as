package  {		import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class specialsPage extends MovieClip {				var img_head;		var page_title;		var fooditem;		var backbutton;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				///themfood		var mycarbonara;		var myquiche;		var soup;		var mylasagna;		var mynachos;				///themlabel		var carbonara_lbl;		var quiche_lbl;		var soup_lbl;		var lasagna_lbl;		var nachos_lbl;						//theminfo		var viewInfo1:TextField = new TextField();		var viewInfo2:TextField = new TextField();		var viewInfo3:TextField = new TextField();		var viewInfo4:TextField = new TextField();		var viewInfo5:TextField = new TextField();				var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var linkFormat:TextFormat = new TextFormat();		var startX:int;		var startY:int;				var backbuttons;		var arimg;		public function specialsPage() {			this.width = 428;//480;			this.height = 252;//270;						img_head = new specials();			img_head.y = -160;//-120;						img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);						page_title = new specials_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);			myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			myTextFormat.align = TextFormatAlign.CENTER;						linkFormat.font = myFont.fontName;			linkFormat.size = 10;			linkFormat.color = 0x620c0d;			linkFormat.underline = true;						//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);									mycarbonara = new carbonara();			mycarbonara.x = align_left;			mycarbonara.y = align_top;			this.addChild(mycarbonara);						myquiche = new quiche();			myquiche.x = align_left/2;			myquiche.y = align_top;			this.addChild(myquiche);			soup = new soup_pump();			soup.y = align_top;			this.addChild(soup);			mynachos = new nachos();			mynachos.x = align_right / 2;			mynachos.y = align_top;			this.addChild(mynachos);						mylasagna = new lasagna();			mylasagna.x = align_right;			mylasagna.y = align_top;			this.addChild(mylasagna);			/*View info lists Created*/						viewInfo1.defaultTextFormat = linkFormat;			viewInfo1.embedFonts = true;			viewInfo1.width = 300;			viewInfo1.x = mycarbonara.x - 20;			viewInfo1.y = mycarbonara.y + 55;			viewInfo1.wordWrap = true;			viewInfo1.text = "View Info" ;			viewInfo1.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "carbonara.txt")});			this.addChild(viewInfo1);						viewInfo2.defaultTextFormat = linkFormat;			viewInfo2.embedFonts = true;			viewInfo2.width = 300;			viewInfo2.x = mynachos.x - 20;			viewInfo2.y = mynachos.y + 55;			viewInfo2.wordWrap = true;			viewInfo2.text = "View Info" ;			viewInfo2.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "nachos.txt")});			this.addChild(viewInfo2);							viewInfo3.defaultTextFormat = linkFormat;			viewInfo3.embedFonts = true;			viewInfo3.width = 300;			viewInfo3.x = myquiche.x - 20;			viewInfo3.y = myquiche.y + 55;			viewInfo3.wordWrap = true;			viewInfo3.text = "View Info" ;			viewInfo3.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "quiche.txt")});			this.addChild(viewInfo3);						viewInfo4.defaultTextFormat = linkFormat;			viewInfo4.embedFonts = true;			viewInfo4.width = 300;			viewInfo4.x = mylasagna.x - 20;			viewInfo4.y = mylasagna.y + 55;			viewInfo4.wordWrap = true;			viewInfo4.text = "View Info" ;			viewInfo4.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "lasagna.txt")});			this.addChild(viewInfo4);						viewInfo5.defaultTextFormat = linkFormat;			viewInfo5.embedFonts = true;			viewInfo5.width = 300;			viewInfo5.x = soup.x - 20;			viewInfo5.y = soup.y + 55;			viewInfo5.wordWrap = true;			viewInfo5.text = "View Info" ;			viewInfo5.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "soup.txt")});			this.addChild(viewInfo5);									circles = [mycarbonara, mynachos, mylasagna, soup, myquiche];			for each (var i in circles)			{				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate(true,true,true,true,null,110,180));			}						backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);									arimg = new patt1();			arimg.y = 130;			this.addChild(arimg);						//labels			carbonara_lbl = new CheckBox();			carbonara_lbl.label = "Chef's Recommendation";			carbonara_lbl.width = 300;			carbonara_lbl.x = align_left - 55;			carbonara_lbl.y = mycarbonara.y + 40;			carbonara_lbl.setStyle("embedFonts", true);			carbonara_lbl.setStyle("textFormat", myTextFormat);			this.addChild(carbonara_lbl);						quiche_lbl = new CheckBox();			quiche_lbl.label = "Weekly Special";			quiche_lbl.width = 300;			quiche_lbl.x = align_left/2 - 40;			quiche_lbl.y = myquiche.y + 40;			quiche_lbl.setStyle("embedFonts", true);			quiche_lbl.setStyle("textFormat", myTextFormat);			this.addChild(quiche_lbl);						lasagna_lbl = new CheckBox();			lasagna_lbl.label = "Soup of the Day";			lasagna_lbl.width = 300;			lasagna_lbl.x = - 40;			lasagna_lbl.y = mylasagna.y + 40;			lasagna_lbl.setStyle("embedFonts", true);			lasagna_lbl.setStyle("textFormat", myTextFormat);			this.addChild(lasagna_lbl);						nachos_lbl = new CheckBox();			nachos_lbl.label = "Best Seller";			nachos_lbl.width = 300;			nachos_lbl.x = align_right/2 - 40;			nachos_lbl.y = mynachos.y + 40;			nachos_lbl.setStyle("embedFonts", true);			nachos_lbl.setStyle("textFormat", myTextFormat);			this.addChild(nachos_lbl);						soup_lbl = new CheckBox();			soup_lbl.label = "$10 Dinner";			soup_lbl.width = 300;			soup_lbl.x = align_right - 40;			soup_lbl.y = soup.y + 40;			soup_lbl.setStyle("embedFonts", true);			soup_lbl.setStyle("textFormat", myTextFormat);			this.addChild(soup_lbl);					}		function stopDragging(event:MouseEvent):void{//, obj:Object) {			//obj.stopDrag();			event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject;			if (event.target.hitTestObject(img_head)){				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each (var circleMC:MovieClip in circles)				{					if (event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}			else			{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"specials");			fooditem.getClose().addEventListener(MouseEvent.MOUSE_DOWN, closeInfo);			this.addChild(fooditem);		}		function closeInfo(e:MouseEvent):void{			this.removeChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}			}	}