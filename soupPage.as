/* THIS IS THE PASTA PAGE, NOT SOUP. I REPEAT. NOT SOUP.*/package  {		import flash.display.MovieClip;	import flash.display.Shape;	import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class soupPage extends MovieClip {		var img_head;		var page_title;		var roundRect;				//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				///themfood		var neapolitan;		var bolognese;		var alfredo;		var arrabiata;		var veggie;				///themlbl		var neapolitan_label;		var bolognese_label;		var alfredo_label;		var arrabiata_label;		var veggie_label;				//theminfo		var viewInfo1:TextField = new TextField();		var viewInfo2:TextField = new TextField();		var viewInfo3:TextField = new TextField();		var viewInfo4:TextField = new TextField();		var viewInfo5:TextField = new TextField();				var fooditem;				var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var linkFormat:TextFormat = new TextFormat();				var startX:int;		var startY:int;				var backbutton;		public function soupPage() {			this.width = 428;//480;			this.height = 252;//270;						img_head = new pasta_logo();			img_head.y = -160;//-120;						img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);						page_title = new soup_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);									myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;			myTextFormat.align = TextFormatAlign.CENTER;						linkFormat.font = myFont.fontName;			linkFormat.size = 10;			linkFormat.color = 0x620c0d;			linkFormat.underline = true;						//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			roundRect = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);						neapolitan = new pasta1();			neapolitan.x = align_left;			neapolitan.y = align_top;			this.addChild(neapolitan);									bolognese = new pasta2();			bolognese.x = align_left/2;			bolognese.y = align_top;			this.addChild(bolognese);						alfredo = new pasta3();			alfredo.x = 0;			alfredo.y = align_top;			this.addChild(alfredo);									 			arrabiata = new pasta4();			arrabiata.x = align_right/2;			arrabiata.y = align_top;			this.addChild(arrabiata);						veggie = new pasta5();			veggie.x = align_right;			veggie.y = align_top;			this.addChild(veggie);						neapolitan_label = new CheckBox();			neapolitan_label.label = "Neapolitan Pasta";			neapolitan_label.width = 300;			neapolitan_label.x = align_left - 40;			neapolitan_label.y = neapolitan.y + 40;			neapolitan_label.setStyle("embedFonts", true);			neapolitan_label.setStyle("textFormat", myTextFormat);			this.addChild(neapolitan_label);						bolognese_label = new CheckBox();			bolognese_label.label = "Spaghetti Bolognese";			bolognese_label.width = 300;			bolognese_label.x = align_left/2 - 40;			bolognese_label.y = bolognese.y + 40;			bolognese_label.setStyle("embedFonts", true);			bolognese_label.setStyle("textFormat", myTextFormat);			this.addChild(bolognese_label);						alfredo_label = new CheckBox();			alfredo_label.label = "Fetuccine Alfredo";			alfredo_label.width = 300;			alfredo_label.x = -50;			alfredo_label.y = alfredo.y + 40;			alfredo_label.setStyle("embedFonts", true);			alfredo_label.setStyle("textFormat", myTextFormat);			this.addChild(alfredo_label);												arrabiata_label = new CheckBox();			arrabiata_label.label = "Spaghetti all'Arrabbiata";			arrabiata_label.width = 300;			arrabiata_label.x = align_right/2 - 40;			arrabiata_label.y = arrabiata.y + 40;			arrabiata_label.setStyle("embedFonts", true);			arrabiata_label.setStyle("textFormat", myTextFormat);			this.addChild(arrabiata_label);						veggie_label = new CheckBox();			veggie_label.label = "Vegetarian Pasta";			veggie_label.width = 300;			veggie_label.x = align_right - 40;			veggie_label.y = veggie.y + 40;			veggie_label.setStyle("embedFonts", true);			veggie_label.setStyle("textFormat", myTextFormat);			this.addChild(veggie_label);									/*View info lists Created*/						viewInfo1.defaultTextFormat = linkFormat;			viewInfo1.embedFonts = true;			viewInfo1.width = 300;			viewInfo1.x = neapolitan.x - 20;			viewInfo1.y = neapolitan.y + 55;			viewInfo1.wordWrap = true;			viewInfo1.text = "View Info" ;			viewInfo1.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "neapolitan.txt")});			this.addChild(viewInfo1);						viewInfo2.defaultTextFormat = linkFormat;			viewInfo2.embedFonts = true;			viewInfo2.width = 300;			viewInfo2.x = bolognese.x - 20;			viewInfo2.y = bolognese.y + 55;			viewInfo2.wordWrap = true;			viewInfo2.text = "View Info" ;			viewInfo2.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "bolognese.txt")});			this.addChild(viewInfo2);							viewInfo3.defaultTextFormat = linkFormat;			viewInfo3.embedFonts = true;			viewInfo3.width = 300;			viewInfo3.x = alfredo.x - 20;			viewInfo3.y = alfredo.y + 55;			viewInfo3.wordWrap = true;			viewInfo3.text = "View Info" ;			viewInfo3.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "alfredo.txt")});			this.addChild(viewInfo3);						viewInfo4.defaultTextFormat = linkFormat;			viewInfo4.embedFonts = true;			viewInfo4.width = 300;			viewInfo4.x = arrabiata.x - 20;			viewInfo4.y = arrabiata.y + 55;			viewInfo4.wordWrap = true;			viewInfo4.text = "View Info" ;			viewInfo4.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "arrabbiata.txt")});			this.addChild(viewInfo4);						viewInfo5.defaultTextFormat = linkFormat;			viewInfo5.embedFonts = true;			viewInfo5.width = 300;			viewInfo5.x = veggie.x - 20;			viewInfo5.y = veggie.y + 55;			viewInfo5.wordWrap = true;			viewInfo5.text = "View Info" ;			viewInfo5.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "veggie.txt")});			this.addChild(viewInfo5);												circles = [neapolitan, bolognese, alfredo, arrabiata, veggie];						for each(var i in circles){				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}						backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);		}		function startDragging(event:MouseEvent):void{//, obj:Object) {			//obj.startDrag();			  // no longer need to keep track of startX & startY here because that's already been done up above  			  event.target.startDrag(true);  			  event.target.parent.addChild(event.target);		}				 		function stopDragging(event:MouseEvent):void{//, obj:Object) {			//obj.stopDrag();						event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject			if(event.target.hitTestObject(img_head)){				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each(var circleMC:MovieClip in circles){					if(event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}else{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"pasta");			fooditem.getClose().addEventListener(MouseEvent.MOUSE_DOWN, closeInfo);			this.addChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}		function closeInfo(e:MouseEvent):void{			this.removeChild(fooditem);		}	}	}