package  {		import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class entreesPage extends MovieClip {		var img_head;		var page_title;		var fooditem;		//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				var springrolls;		var meatballs;		var prawns;		var salmon;		var bread;				var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();				var backbutton;		public function entreesPage() {			this.width = 428;//480;			this.height = 252;//270;						img_head = new entree();			img_head.y = -160;//-120;						img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);								page_title = new entrees_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);						myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;						//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);						springrolls = new entree1();			springrolls.x = align_left;			springrolls.y = align_top;			springrolls.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "springrolls.txt")});			this.addChild(springrolls);									meatballs = new entree2();			meatballs.x = align_left/2;			meatballs.y = align_top;			meatballs.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "meatballs.txt")});			this.addChild(meatballs);						prawns = new entree3();			prawns.x = 0;			prawns.y = align_top;			prawns.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "prawns.txt")});			this.addChild(prawns);						salmon = new entree4();			salmon.x = align_right/2;			salmon.y = align_top;			salmon.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "salmon.txt")});			this.addChild(salmon);						bread = new entree5();			bread.x = align_right;			bread.y = align_top;			bread.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{ showInfo(e, "bread.txt")});			this.addChild(bread);						//all the objects			circles = [springrolls, meatballs, prawns, salmon,bread];						for each(var i in circles){				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				//MultiTouch.enableGesture(i,new MultiDragScaleRotate());			}						backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);		}		function startDragging(event:MouseEvent):void{//, obj:Object) {			//obj.startDrag();			  // no longer need to keep track of startX & startY here because that's already been done up above  			  event.target.startDrag(true);  			  event.target.parent.addChild(event.target);		}				 		function stopDragging(event:MouseEvent):void{//, obj:Object) {			//obj.stopDrag();						event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject			if(event.target.hitTestObject(img_head)){				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each(var circleMC:MovieClip in circles){					if(event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}else{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"entree");			this.addChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}	}