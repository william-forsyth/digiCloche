package  {		import flash.display.MovieClip;	import flash.display.Shape;	import fl.controls.*;	import flash.text.*;	import flash.events.*;	import pq.multitouch.*;	import pq.multitouch.manipulators.MultiDragScaleRotate;		public class entreesPage extends MovieClip {		var img_head;		var page_title;		var fooditem;		//alignments		var align_right = 220;		var align_left = -220;		var diff = 130;		var align_top = -20;				var springrolls;		var meatballs;		var prawns;		var salmon;		var bread;				//them label		var springrolls_label;		var meatballs_label;		var prawns_label;		var salmon_label;		var bread_label;				//theminfo		var viewInfo1:TextField = new TextField();		var viewInfo2:TextField = new TextField();		var viewInfo3:TextField = new TextField();		var viewInfo4:TextField = new TextField();		var viewInfo5:TextField = new TextField();				var circles:Array;		var myFont:Font = new helvs_light();		var myTextFormat:TextFormat = new TextFormat();		var linkFormat:TextFormat = new TextFormat();				var backbutton;				var arimg;		public function entreesPage() {			this.width = 428;//480;			this.height = 252;//270;						img_head = new entree();			img_head.y = -160;//-120;						img_head.width = 70;			img_head.height = 70;			this.addChild(img_head);								page_title = new entrees_label();			page_title.y = img_head.y + 40;			this.addChild(page_title);						myTextFormat.font = myFont.fontName;			myTextFormat.size = 8;			myTextFormat.color = 0x620c0d;									linkFormat.font = myFont.fontName;			linkFormat.size = 10;			linkFormat.color = 0x620c0d;			linkFormat.underline = true;						//stage width, stage height, width of rectangle, height of rectangle, ellipse width, ellipse height			var roundRect:Shape = new Shape();			roundRect.graphics.beginFill(0xFFFFFF, 0.5);			roundRect.graphics.drawRoundRect(0, 0, 600, 280, 15, 15);			roundRect.x = -300;			roundRect.y = -100;			this.addChild(roundRect);						springrolls = new entree1();			springrolls.x = align_left;			springrolls.y = align_top;			this.addChild(springrolls);									meatballs = new entree2();			meatballs.x = align_left/2;			meatballs.y = align_top;			this.addChild(meatballs);						prawns = new entree3();			prawns.x = 0;			prawns.y = align_top;			this.addChild(prawns);						salmon = new entree4();			salmon.x = align_right/2;			salmon.y = align_top;			this.addChild(salmon);						bread = new entree5();			bread.x = align_right;			bread.y = align_top;			this.addChild(bread);									springrolls_label = new CheckBox();			springrolls_label.label = "Pork Spring Rolls (4pcs)";			springrolls_label.width = 300;			springrolls_label.x = align_left - 40;			springrolls_label.y = springrolls.y + 40;			springrolls_label.setStyle("embedFonts", true);			springrolls_label.setStyle("textFormat", myTextFormat);			this.addChild(springrolls_label);						meatballs_label = new CheckBox();			meatballs_label.label = "Meatballs (6pcs)";			meatballs_label.width = 300;			meatballs_label.x = align_left/2 - 40;			meatballs_label.y = meatballs.y + 40;			meatballs_label.setStyle("embedFonts", true);			meatballs_label.setStyle("textFormat", myTextFormat);			this.addChild(meatballs_label);						prawns_label = new CheckBox();			prawns_label.label = "Garlic Prawns";			prawns_label.width = 300;			prawns_label.x = - 40;			prawns_label.y = prawns.y + 40;			prawns_label.setStyle("embedFonts", true);			prawns_label.setStyle("textFormat", myTextFormat);			this.addChild(prawns_label);						salmon_label = new CheckBox();			salmon_label.label = "Dill Grilled Salmon";			salmon_label.width = 300;			salmon_label.x = align_right/2 - 40;			salmon_label.y = salmon.y + 40;			salmon_label.setStyle("embedFonts", true);			salmon_label.setStyle("textFormat", myTextFormat);			this.addChild(salmon_label);						bread_label = new CheckBox();			bread_label.label = "Garlic and herb bread";			bread_label.width = 300;			bread_label.x = align_right - 40;			bread_label.y = bread.y + 40;			bread_label.setStyle("embedFonts", true);			bread_label.setStyle("textFormat", myTextFormat);			this.addChild(bread_label);						/*View info lists Created*/						viewInfo1.defaultTextFormat = linkFormat;			viewInfo1.embedFonts = true;			viewInfo1.width = 300;			viewInfo1.x = springrolls.x - 20;			viewInfo1.y = springrolls.y + 55;			viewInfo1.wordWrap = true;			viewInfo1.text = "View Info" ;			viewInfo1.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "springrolls.txt")});			this.addChild(viewInfo1);						viewInfo2.defaultTextFormat = linkFormat;			viewInfo2.embedFonts = true;			viewInfo2.width = 300;			viewInfo2.x = meatballs.x - 20;			viewInfo2.y = meatballs.y + 55;			viewInfo2.wordWrap = true;			viewInfo2.text = "View Info" ;			viewInfo2.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "meatballs.txt")});			this.addChild(viewInfo2);							viewInfo3.defaultTextFormat = linkFormat;			viewInfo3.embedFonts = true;			viewInfo3.width = 300;			viewInfo3.x = prawns.x - 20;			viewInfo3.y = prawns.y + 55;			viewInfo3.wordWrap = true;			viewInfo3.text = "View Info" 			viewInfo3.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "garlicprawn.txt")});			this.addChild(viewInfo3);						viewInfo4.defaultTextFormat = linkFormat;			viewInfo4.embedFonts = true;			viewInfo4.width = 300;			viewInfo4.x = salmon.x - 20;			viewInfo4.y = salmon.y + 55;			viewInfo4.wordWrap = true;			viewInfo4.text = "View Info" ;			viewInfo4.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "salmon.txt")});			this.addChild(viewInfo4);						viewInfo5.defaultTextFormat = linkFormat;			viewInfo5.embedFonts = true;			viewInfo5.width = 300;			viewInfo5.x = bread.x - 20;			viewInfo5.y = bread.y + 55;			viewInfo5.wordWrap = true;			viewInfo5.text = "View Info" ;			viewInfo5.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void{showInfo(e, "garlicbread.txt")});			this.addChild(viewInfo5);									//all the objects			circles = [springrolls, meatballs, prawns, salmon,bread];						for each(var i in circles){				//i.addEventListener(MouseEvent.MOUSE_DOWN, startDragging);				i.addEventListener(MouseEvent.MOUSE_UP, stopDragging);				i.startX = i.x;				i.startY = i.y;				MultiTouch.enableGesture(i,new MultiDragScaleRotate(true,true,true,true,null,110,180));			}						backbutton = new back();			backbutton.x = -270;			backbutton.y = -170;			this.addChild(backbutton);						arimg = new patt6();			arimg.y = 130;			//arimg.x = 150;			this.addChild(arimg);		}		function startDragging(event:MouseEvent):void{//, obj:Object) {			//obj.startDrag();			  // no longer need to keep track of startX & startY here because that's already been done up above  			  event.target.startDrag(true);  			  event.target.parent.addChild(event.target);		}				 		function stopDragging(event:MouseEvent):void{//, obj:Object) {			//obj.stopDrag();						event.target.stopDrag();			// check to see if the event target is touching target_mc using hitTestObject			if(event.target.hitTestObject(img_head)){				event.target.buttonMode = false;				event.target.x = -400;				event.target.y = -400;				// move all circles OTHER than the current target back to their original positions				for each(var circleMC:MovieClip in circles){					if(event.target != circleMC)					{						circleMC.x = circleMC.startX;						circleMC.y = circleMC.startY;					}				}			}else{				// only need to move the event target back if it was dropped outside of target_mc				event.target.x = event.target.startX;				event.target.y = event.target.startY;				event.target.buttonMode = true;			}		}		function showInfo(e:MouseEvent, txtfile:String):void{			fooditem = new foodItem(txtfile,"entree");			fooditem.getClose().addEventListener(MouseEvent.MOUSE_DOWN, closeInfo);			this.addChild(fooditem);		}		function closeInfo(e:MouseEvent):void{			this.removeChild(fooditem);		}		function getBackButton():Object{			return this.backbutton;		}	}	}